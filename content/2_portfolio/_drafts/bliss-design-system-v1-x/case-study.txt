Title: Bliss Design System v1.x

----

Company: BRYTER

----

Role: Design System Lead

----

Year: 2020-2021

----

Responsibilities: Design, Documentation, Product Management

----

Type: case-study

----

Intro: The continuation of the journey of the internal design system for BRYTER.

----

Text: [{"content":{"level":"h2","text":"Overview"},"id":"f7fe2c26-0ea1-430d-8fb8-cc3b18ffbee0","isHidden":false,"type":"heading"},{"content":{"text":"<p>After the <a href=\"\/portfolio\/bliss-design-system-v0-x\" rel=\"noopener noreferrer nofollow\">first take on the Bliss Design System<\/a> and the mentioned priority shift during mid-2020, we continued work on Bliss in November 2020. With a small new team of three (me plus two frontend engineers), we started taking inventory of the current state of Bliss and started planning the future.<\/p><p>With the goal of moving the component library of Bliss to a JavaScript-based foundation, we quickly moved ahead in building an early proof of concept and shipped the first toolkits for <a href=\"\/portfolio\/bliss-design-system-iconsets\" rel=\"noopener noreferrer nofollow\">Bliss Icons<\/a> to our consumers. <\/p><p>Coupled with numerous feedback session with stakeholders across engineering, design and product management, we landed on moving forward and build our components as <a href=\"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Web_Components\" rel=\"noopener noreferrer nofollow\">Web Components<\/a>. We found a solution to build our component library that hopefully will last because of its technology-agnostic foundation, which was one of the cornerstones of <a href=\"\/portfolio\/bliss-design-system-v0-x\" rel=\"noopener noreferrer nofollow\">Bliss Design System v0.x<\/a>.<\/p><p>As this is still a working project, I will focus on some areas we've worked on over the past year and what we've learned from it:<\/p>"},"id":"7d7223f5-1ee2-4808-a6e0-9492799b3eb0","isHidden":false,"type":"text"},{"content":{"level":"h2","text":"Rebuilding components and improving accessibility"},"id":"cd731188-aeac-43e7-a909-9f8d3c7aa3d8","isHidden":false,"type":"heading"},{"content":{"text":"<p>With a one and a half year history of <a href=\"\/portfolio\/bliss-design-system-v0-x\" rel=\"noopener noreferrer nofollow\">Bliss v0.x<\/a>, we approached our move to a new JavaScript-based architecture with a full on reconsideration of our current design decisions for each component. Every component we migrate to Web Components will go under a detailed reconsideration and usage analyses. All this happened together with the design team and numerous feedback and design critique sessions.<\/p><p>Besides some visual adjustments, was our focus on improving the accessibility of each component. One of the most significant changes we introduced during our early development effort was the alignment of the visual appearance of the focus ring.<\/p>"},"id":"f908afa8-80b7-419e-8db6-39eb1fa1f223","isHidden":false,"type":"text"},{"content":{"location":"kirby","image":["figma-checkbox.png"],"src":"","alt":"","caption":"The checkbox component and how it is structured inside our Figma library.","link":"","ratio":"","crop":"false"},"id":"361fab7c-0796-4ede-b7bb-19c7f44ac53a","isHidden":false,"type":"image"},{"content":{"location":"kirby","image":["figma-toggle.png"],"src":"","alt":"","caption":"The toggle component and how it is structured inside our Figma library.","link":"","ratio":"","crop":"false"},"id":"11a8cf6a-e3a0-4705-85ce-0fc306bde2e8","isHidden":false,"type":"image"},{"content":{"text":"<p>To make usage and communication between designers and engineers more straightforward, we also leveraged the power of Figma to add additional helpful information to the Figma components individually. With this information, consumers not only were able to get to the component documentation via a click of a button, they also were able to see the current availability of individual components and potential gotchas directly inside Figma.<\/p>"},"id":"bdad2479-6f11-4cb2-af77-42380615be6c","isHidden":false,"type":"text"},{"content":{"location":"kirby","image":[],"src":"","alt":"","caption":"","link":"","ratio":"","crop":"false"},"id":"e4663bc2-808d-4fe4-b976-39fcf86af5d1","isHidden":false,"type":"image"},{"content":{"level":"h2","text":"Rebuilding documentation"},"id":"c5272495-3bd7-478b-a6f6-3e2dfbc1be90","isHidden":false,"type":"heading"},{"content":{"text":"<p>With a new technical approach and revisited components and better accessibility support, we had to find a reasonable solution on how to approach documentation for the new generation of Bliss. As we used <a href=\"https:\/\/storybook.js.org\" rel=\"noopener noreferrer nofollow\">Storybook<\/a> mostly for development in the beginning, we decided to take it one step further and also incorporate more and more writing documentation pieces there.<\/p><p>Our goals with rebuilding our documentation was not only to be more flexible in comparison to our <a href=\"https:\/\/zeroheight.com\" rel=\"noopener noreferrer nofollow\">zeroheight<\/a> version before. We also wanted to establish one place where you can find everything, and this seemed as the right call at the right time. Of every new Web Components implementation, we declared the documentation and resources on zeroheight as legacy and moved all the details to Storybook.<\/p>"},"id":"705e67a7-6d64-4f14-aa17-9b4b6466d36f","isHidden":false,"type":"text"},{"content":{"location":"kirby","image":["legacy-documentation-notice.png"],"src":"","alt":"","caption":"We added deprecation warnings to all the documentation pages that were focused on legacy components, we now had a Web Component alternative for.","link":"","ratio":"","crop":"false"},"id":"f106861c-c91b-49b5-8f9c-00a4085e01ba","isHidden":false,"type":"image"},{"content":{"text":"<p>Besides that, we also extended our general documentation offering, which initially was mostly focused on components. Step by step, we were able to identify and document more and more general patterns we needed to align on and add some guidelines around.<\/p>"},"id":"9deb9d5c-6a8c-422a-ae12-39b035c61eac","isHidden":false,"type":"text"},{"content":{"location":"kirby","image":["when-to-use-a-toggle.png"],"src":"","alt":"","caption":"Pattern guidelines around the usage of toggles","link":"","ratio":"","crop":"false"},"id":"39cfac29-b1c9-4606-a0af-570cd8d175f1","isHidden":false,"type":"image"},{"content":{"level":"h2","text":"Support and collaboration"},"id":"8930db4c-01d8-448f-ab7f-fd0e526dd390","isHidden":false,"type":"heading"},{"content":{"text":"<p>With more and more adoption and general usage, support and collaboration requests from designers or engineers will appear more and more. I think, this should be seen as a good thing, as adoption and usage are great indicators for relevance. Furthermore, every support or collaboration request is a chance to make a consumer happy and also educate them for the next time they run into the same or similar problem. For us, there were different ways to support and collaborate with consumers.<\/p>"},"id":"6fc33971-9779-4ab6-9b5b-f7bd7f53e016","isHidden":false,"type":"text"},{"content":{"level":"h3","text":"Support channel"},"id":"f23ccd4e-a79c-4452-869e-5f1db969269b","isHidden":false,"type":"heading"},{"content":{"text":"<p>Probably the easiest way to approach our team and ask for support is the <code>#bliss_support<\/code> channel in Slack. In hindsight, this is also by far the most frequently used channel to get in touch and ask for guidance. One of our driving principles of our support channel was always being fast in the initial response, but being thorough regarding the solution.<\/p>"},"id":"d7680ead-5dea-47c8-a68a-4fd70ec9e4b5","isHidden":false,"type":"text"},{"content":{"level":"h3","text":"Proposal board"},"id":"c8590eed-81e4-4748-ab42-d2718cd1536e","isHidden":false,"type":"heading"},{"content":{"text":""},"id":"8cb43306-dc2b-45b4-8b59-711cbf44fa2f","isHidden":false,"type":"text"},{"content":{"level":"h3","text":"Open Office Hours"},"id":"7d47d2d3-3d08-45cc-9fdb-a3b527ee1eb8","isHidden":false,"type":"heading"},{"content":{"text":"<p>We also offered fortnightly office hours were stakeholders could join and discuss different problems or solution with us.<\/p>"},"id":"5e07dd29-2d73-415e-adec-f277e0c3837f","isHidden":false,"type":"text"},{"content":{"level":"h3","text":"Swap Days"},"id":"4fce3b64-f523-4662-a16a-a025a50c5127","isHidden":false,"type":"heading"},{"content":{"text":"<p>On experimental addition to our list of different collaboration methods were <code>Swap Days<\/code> where we offered different units to do their work in swapping legacy implementation with new Bliss Components. To successfully accomplish this, we created full-fledged merge requests with new Bliss Components that only needed a review from the specific unit. This method not only increased our overall adoption, but also increased the understanding of Bliss Components across units, as engineers still needed to review merge requests and learned different ways of using Bliss through review.<\/p>"},"id":"f39518fc-aa26-4fb1-9cfc-879754c901ee","isHidden":false,"type":"text"},{"content":{"level":"h2","text":"Bliss Ambassadors"},"id":"8296162d-3d00-4599-beb0-af3d943993fb","isHidden":false,"type":"heading"},{"content":{"text":"<p>The product area of BRYTER operates in numerous cross-functional teams, called \u201cUnits\u201d. All of these units consume Bliss, or different parts of Bliss, regularly. In these kinds of setups, with a fast growth in new joiners, communication channels can lose their power from time to time. As everybody is focused on achieving the goals of their units, it sometimes is difficult to give feedback or react to us reaching for feedback from different teams.<\/p><p>We felt the slow and steady decline of our communication channel and needed to take a different approach to inform units on an equal level, but also have an open and easy way for them to approach us \u2014 besides the general support channel or open office hours.<\/p><p>This is where the idea of Bliss Ambassadors comes into play. We created a forum for people to become Bliss Ambassadors for their unit. This meant that we had a direct contact person in every unit we could talk to, without running into the \u201ctalking into the void\u201d problem again. We also started to organize fortnightly <em>Bliss Ambassador Syncs<\/em> where every ambassador joins a 30-minute call. In this call, they could get the hottest updates from the Bliss team and have space to share the latest struggles of feedback from their unit.<\/p>"},"id":"1fd36878-73f5-42ed-ba62-7d8f2802b105","isHidden":false,"type":"text"},{"content":{"level":"h2","text":"What I've learned"},"id":"3cd799a8-6224-430b-9eaf-7242ab69627e","isHidden":false,"type":"heading"},{"content":{"text":"<p>Naming continues to be one of the hardest things to get right. This is especially true in these areas that seem rather simple, like naming a component. We learned that naming a component, Switch, doesn't mean that in day-to-day use consumers also refer to it as Switch. While we kept the naming consistent, people were calling it \u201cToggle\u201d in nearly all written and spoken communication. There is no right or wrong, different design systems call this component most of the time \u201cSwitch\u201d or \u201cToggle\u201d, but in our context, there was a clear winner. Acknowledging that and renaming it to \u201cToggle\u201d might seem like a small step, but it removes a lot of confusing during conversations or support requests.<\/p><p>Context always matter, especially in design systems.<\/p>"},"id":"dbc6b9d1-74a5-41dd-8079-bcb03d208c6d","isHidden":false,"type":"text"},{"content":{"text":"<p>Special mention and thanks to <a href=\"https:\/\/gvonkoss.com\" rel=\"noopener noreferrer nofollow\">Gabrielle von Koss<\/a>, <a href=\"https:\/\/workwithcarolyn.com\" rel=\"noopener noreferrer nofollow\">Carolyn Stransky<\/a><strong> <\/strong>and <a href=\"https:\/\/kilian.website\" rel=\"noopener noreferrer nofollow\">Kilian McMahon<\/a> for working with me on Bliss.<\/p>"},"id":"f373f16f-f174-4b37-8f98-caa8e8a68df6","isHidden":false,"type":"text"}]