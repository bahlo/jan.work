Title: Bliss Design System v0.x

----

Company: BRYTER

----

Role: Lead Designer & Developer

----

Year: 2019-2021

----

Responsibilities: Design Systems, UX & UI, Front-end Engineering, Documentation, Product Management

----

Homepage: false

----

Teaser: false

----

Type: case-study

----

Intro: The beginning of the internal design system for BRYTER.

----

Text: [{"content":{"level":"h2","text":"Overview"},"id":"e4adb641-fac2-4670-b18b-0f5ce53f0f7a","isHidden":false,"type":"heading"},{"content":{"text":"<p>When I joined <a href=\"https:\/\/bryter.com\" rel=\"noopener noreferrer nofollow\">BRYTER<\/a> in July 2019, one of my primary focus-points was the creation of our internal design system. BRYTER still was quite young (little older than a year) but growing fast. The overall pace of development was smooth and new features were developed in no time.<\/p><p>Starting to build a design system from scratch that supports the speed of the team while also trying to systematize and consolidates the overall product design sounded like an extraordinary challenge. <\/p><p>In hindsight, we established foundations for designers and developers to consolidate their work and improve the overall alignment and consistency. Designers could use icons and components inside Figma or learn and follow usage guidelines for components inside our documentation. With Bliss CSS, developers could move quicker and build solutions more consistently while speaking on language when collaborating with designers.<\/p>"},"id":"7269394b-c36f-4646-a774-83fee46b14ed","isHidden":false,"type":"text"},{"content":{"level":"h2","text":"Getting the fundamentals right"},"id":"455cafaa-34f7-435a-b007-5b65c198b869","isHidden":false,"type":"heading"},{"content":{"text":"<p>During my first weeks at BRYTER we started to take the initial steps to get started on our design system. After conversations with some design, product management and engineering folks, we began drafting an RFC to summarize our plan.<\/p><p>Based on this RFC I moderated different discussions to get a broader understanding about the different viewpoints. Involvement the product team was superb which was important because the design system would affect everybody from our product team. Therefore, universal buy-in was critical.<\/p><p>From the start, one of the key goals of our design system was to create a technology-agnostic solution. While <a href=\"https:\/\/www.figma.com\" rel=\"noopener noreferrer nofollow\">Figma<\/a> was our tool of choice to create the design system for designers, we agreed on a CSS library with semantic and accessible HTML suggestions for developers. This would meet the balance between being technology-agnostic and also fast in terms of implantation time, while also providing fast feedback cycles and adoption curves.<\/p><p>After all the initial discussion and alignment across the product teams, we also aligned on (unarguably) one of the most important parts of a design system, its name. From this point going forward, the name of our design system was Bliss.<\/p>"},"id":"a0ccf23f-baa4-4cf3-8a3a-91fb9e71ad4d","isHidden":false,"type":"text"},{"content":{"level":"h2","text":"Atoms are everywhere"},"id":"80ab52f7-c52f-453a-9f46-1079d18d02a7","isHidden":false,"type":"heading"},{"content":{"text":"<p>At the beginning of Bliss, we deliberately focused on small pieces with big influences across the design and product. For us, it was clear from the beginning that we would start some atomic design decisions before getting to any components (e.g. buttons, tabs, form elements...):<\/p>"},"id":"ecc244c4-cbde-4c28-9a72-c0b0bde1b89b","isHidden":false,"type":"text"},{"content":{"location":"kirby","image":["atoms.png"],"src":"","alt":"","caption":"These where the core design decision we've started with for Bliss.","link":"","ratio":"","crop":"false"},"id":"0d7fa361-e9be-457f-83c4-fe132c5d9b8f","isHidden":false,"type":"image"},{"content":{"text":"<p>These different areas are the fundamentals of every interface at the core. With the initial focus set, we immediately started with redefining our color system. As I was playing with the color, it became clear to us, that we needed a system to make more systematic decisions around color. A more systematic approach would especially help us make our reasoning and guidance around accessibility and color contrast easier.<\/p>"},"id":"d08e6239-ac37-4f60-874c-1c19405c9e60","isHidden":false,"type":"text"},{"content":{"location":"kirby","image":["colors.png"],"src":"","alt":"","caption":"","link":"","ratio":"","crop":"false"},"id":"f66f76bf-42b2-4039-bbc1-d0400fad205f","isHidden":false,"type":"image"},{"content":{"text":"<p>With a color system defined from a design perspective (designers could use the colors with <a href=\"https:\/\/help.figma.com\/hc\/en-us\/articles\/360039238753-Styles-in-Figma\" rel=\"noopener noreferrer nofollow\">Figma Styles<\/a>), we needed to also make this available for our developers to quickly create real life examples for our new colors and their usage.<\/p>"},"id":"d5778412-59c0-4a4e-b974-1bb3d7853cae","isHidden":false,"type":"text"},{"content":{"level":"h2","text":"Everything is a token"},"id":"d7b058f4-4d06-4e3d-8c12-d924a72f2510","isHidden":false,"type":"heading"},{"content":{"text":"<p>To help bridge the gap between design and development, we introduced <a href=\"https:\/\/css-tricks.com\/what-are-design-tokens\/\" rel=\"noopener noreferrer nofollow\">Design Tokens<\/a> as a toolkit for manage atomic design decisions, like colors. For the implementation and management of our Design Tokens, we started using a tool called <a href=\"https:\/\/amzn.github.io\/style-dictionary\" rel=\"noopener noreferrer nofollow\">Style Dictionary<\/a>.<\/p><p>With this in mind, we started to extract the color values from Style Dictionary and release and initial version of what we later called Bliss CSS, a CSS library that enables developers to get the Bliss visual into their codebase. After we release all the color tokens, we started to go through areas of the BRYTER product and replace old color styles with new color styles that are now served by Bliss as Design Tokens.<\/p>"},"id":"c9a3c9ac-9cc3-4755-b44f-a1afe3a20f76","isHidden":false,"type":"text"},{"content":{"text":"<p>We repeated this approach for Typography and Spacing as well. First, design everything inside Figma, then bridge the gap between design and development with Design Tokens, and lastly offer finalized styles to developers with Bliss CSS. This specific approach worked perfectly with these small design atoms and had two main positive effects:<\/p><p>1. Designers and developers could start using Bliss directly and could align our design language more and more (color names, typography styles or spacing, everything had the same naming structure now).<\/p><p>2. Because we actively started replacing working code with new Bliss CSS design atoms, developers weren't scared to try it out themselves and saw the positive impact right away.<\/p>"},"id":"8bbaea31-5747-48ea-94bd-b0d0682da621","isHidden":false,"type":"text"},{"content":{"level":"h2","text":"Components"},"id":"841ec5b5-e81d-4bf1-aed1-30a9caf766c6","isHidden":false,"type":"heading"},{"content":{"text":"<p>While all the foundational work is needed and Design Tokens already helped designers and developers in their daily work, actual components is where the big gains become noticeable. The interesting challenge for us during the development of components for Bliss was the alignment between what was already in use and where Bliss needed to align different approaches to surface one general solution.<\/p><p>Therefore, we started every component creation process with an interface inventory to surface current patterns and see where we can align components. Because most of the tasks around Bliss at that time were mostly led by me, good prioritization was key to keep a good and constant release flow going.<\/p><p>During my time working on Bliss, this was probably the most \"heads down and produce\" phase. With our roadmap in mind, I mostly switched between Figma and Bliss CSS to develop components on both ends, while also getting feedback from designers and developers. This process was a huge collaboration effort and I couldn't have done it without the help and guidance from all people involved.<\/p>"},"id":"2704f76c-196b-48e4-ba09-2fd5fa47bee3","isHidden":false,"type":"text"},{"content":{"location":"kirby","image":["figma-feedback-and-indicators.png"],"src":"","alt":"","caption":null,"link":"","ratio":"","crop":"false"},"id":"38e8f6b5-f27d-4c9e-92e5-8c5a9a92b5d5","isHidden":false,"type":"image"},{"content":{"location":"kirby","image":["figma-form-elements.png"],"src":"","alt":"","caption":null,"link":"","ratio":"","crop":"false"},"id":"2de9098e-7872-4d93-a64a-41aa66c6c4a3","isHidden":false,"type":"image"},{"content":{"location":"kirby","image":["figma-data-table-and-lists.png"],"src":"","alt":"","caption":null,"link":"","ratio":"","crop":"false"},"id":"7be03060-8777-409f-9d08-d39a91ba7252","isHidden":false,"type":"image"},{"content":{"level":"h2","text":"Documentation is king"},"id":"cbfc1688-0a87-4209-adcd-6ab90b75a29d","isHidden":false,"type":"heading"},{"content":{"text":"<p>While releasing new Bliss CSS components was common at the end of 2019, documentation started getting behind. While we started using Notion at the beginning to document decision-making and basic guidelines around components, Notion wasn't the right place to have detailed and guided documentation for a design system, so we needed a better solution.<\/p><p>Because of a lack resource (work around Bliss was mostly done by me) we need a quick solution without many initial efforts. We decided to go with <a href=\"https:\/\/zeroheight.com\" rel=\"noopener noreferrer nofollow\">zeroheight<\/a> to create one unified place for documentation. One place where designers, developers, product managers or anybody else could go and find what they were looking for.<\/p>"},"id":"fe5b18b6-11ac-4b88-aaaa-2af050ebe0d4","isHidden":false,"type":"text"},{"content":{"location":"kirby","image":["documentation-button.png"],"src":"","alt":"","caption":"The overview page of the \"Button\" Bliss CSS component. This is the place to get a general overview of the components, its variants and different usage guidelines.","link":"","ratio":"","crop":"false"},"id":"f76f2630-32ba-4108-a21b-2c7e25af47ab","isHidden":false,"type":"image"},{"content":{"location":"kirby","image":["documentation-input.png"],"src":"","alt":"","caption":"Developer focused documentation area where visitors can play around with different code examples.","link":"","ratio":"","crop":"false"},"id":"6684ce47-8162-4b36-b42f-f5f5f5910ec6","isHidden":false,"type":"image"},{"content":{"text":"<p>Besides the general foundational and design documentation, the key focus of the documentation page way around components. Each individual component page followed a three section model.<\/p>"},"id":"bc64a99b-cf3d-4823-86d6-ef04c9b113c0","isHidden":false,"type":"text"},{"content":{"level":"h3","text":"Section: General"},"id":"407409f7-19ac-4885-865a-80c914495109","isHidden":false,"type":"heading"},{"content":{"text":"<p>All the general and design-focused information about a component. What are its variants? How to use it? What type of content can this component accept? What are the accessibility guidelines?<\/p><p>If somebody wants to understand everything around one component, this section is the one they would go. For more detailed questions, there is always more to explore, but this page is for everybody.<\/p>"},"id":"73693385-4261-440e-aa8b-e999a6bc6db1","isHidden":false,"type":"text"},{"content":{"level":"h3","text":"Section: Code"},"id":"a9be56eb-0277-4c84-827b-72dc09075226","isHidden":false,"type":"heading"},{"content":{"text":"<p>The code section of the component documentation was mostly for developers. This page hosted some code examples that could be manipulated in real-time. All the showcased examples where semantic suggestions on how to use the Bliss CSS classes to get to a specific result. They also included some accessibility best practices.<\/p>"},"id":"6cff5cb3-aab5-46d2-8831-0e5ac9df21b9","isHidden":false,"type":"text"},{"content":{"level":"h3","text":"Section: Tokens"},"id":"27609197-bfa4-4665-818c-f369960e8f8e","isHidden":false,"type":"heading"},{"content":{"text":"<p>The tokens section was a straightforward documentation of all the specific design tokens that were scoped to an individual component level.<\/p>"},"id":"1de44824-f63f-44db-b531-f30560aec286","isHidden":false,"type":"text"},{"content":{"level":"h2","text":"Pause and struggle"},"id":"2217fd18-4f1c-4f9d-9082-43bfc5810b09","isHidden":false,"type":"heading"},{"content":{"text":"<p>While the first seven months of our Bliss journey were full of improvements and progress, sometimes priorities change inside a fast-growing company. As the design system got to a level where general usage was common across our different teams and other pressing features were more important to the company, I moved to another team. As the only core member of the design system team, this meant that Bliss needed to go into a temporary maintenance mode for and with very limited resources only bug fixes were possible.<\/p><p>While this stopped us from shipping new ideas for components or layouts, the foundation we've built for designers inside Figma and for developers with Bliss CSS worked and supported them successfully in their day-to-day work. Additionally, it was great to see that our early decisions of going technology-agnostic (we just offered CSS, not JavaScript) help us during this time of pause because it kept things flexible and adjustable.<\/p>"},"id":"7a8baffd-c670-4bc8-a2c1-25825b8642d3","isHidden":false,"type":"text"},{"content":{"level":"h2","text":"A new beginning"},"id":"2cc511d1-a959-4b99-aa47-898291dc9a6d","isHidden":false,"type":"heading"},{"content":{"text":"<p>While the time Bliss went into maintenance mode took longer than initially expected, it had a good outcome after all. On the one hand, we could prove that Bliss offered value to our teams and across disciplines. On the other hand, it became clear that we needed to put more focus into Bliss to make the solutions it offered even more beneficial to BRYTER and our plans.<\/p><p>This is where we decided to hire a team and start the journey to rethink the current state of Bliss. Moving into a world where Bliss not only focuses on the styles (Bliss CSS) but offers fully functional and encapsulated components.<\/p><p>This process in ongoing and you can find more about it on out <a href=\"https:\/\/gitlab.com\/bliss-design-system\" rel=\"noopener noreferrer nofollow\">GitLab organization<\/a>. We are going to make all new Bliss related work open source (sadly not Bliss CSS at this point).<\/p>"},"id":"cfd7e664-8199-4b5d-b5ee-84144bd598da","isHidden":false,"type":"text"}]