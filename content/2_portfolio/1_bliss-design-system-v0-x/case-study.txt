Title: Bliss Design System v0.x

----

Company: BRYTER

----

Role: Product Designer & Developer

----

Year: 2019-2021

----

Homepage: false

----

Teaser: true

----

Type: case-study

----

Intro: 

----

Text: [{"content":{"level":"h2","text":"Overview"},"id":"e4adb641-fac2-4670-b18b-0f5ce53f0f7a","isHidden":false,"type":"heading"},{"content":{"text":"<p>When I joined <a href=\"https:\/\/bryter.com\" rel=\"noopener noreferrer nofollow\">BRYTER<\/a> in July 2019, one of my primary focus-points was the creation of our internal design system. BRYTER still was quite young during this time (little older than a year) but growing fast. The overall pace of development was smooth and new features were developed in no time.<\/p><p>Joining at that time and starting to build a design system from scratch that supports the speed of the team while also trying to systematize and consolidates the overall product design sounded like an extraordinary challenge.<\/p>"},"id":"7269394b-c36f-4646-a774-83fee46b14ed","isHidden":false,"type":"text"},{"content":{"level":"h2","text":"Getting the fundamentals right"},"id":"455cafaa-34f7-435a-b007-5b65c198b869","isHidden":false,"type":"heading"},{"content":{"text":"<p>During my first weeks at BRYTER we started to talk about the initial steps we needed to take to get started on our design system. After some first chats with some design, product management and engineering people, we started drafting an RFC to summarize our plan.<\/p><p>Based on this RFC I moderated different discussions to get an understanding of the different viewpoints and concerns about the approaches we were about to kick-start. Everybody from the product team was quite involved because the goal was a universal approach that would not only affect designers, but also developers and product managers. Therefore, universal buy-in was critical.<\/p><p>From the start, one of the key goals of our design system was to create a technology-agnostic solution. While Figma was our clear tool of choice for create the design system for designers, we agreed on a CSS library with semantic and accessible HTML suggestions. This would meet the balance between being technology-agnostic and also faster in terms of implantation, which results in fast feedback cycles and adoption curves.<\/p><p>After all these fruitful discussion and more alignment across the product teams, we also aligned on (unarguably) one of the most important parts of a design system, its name. From this point going forward, our design system was called Bliss.<\/p>"},"id":"a0ccf23f-baa4-4cf3-8a3a-91fb9e71ad4d","isHidden":false,"type":"text"},{"content":{"level":"h2","text":"Atoms are everywhere"},"id":"80ab52f7-c52f-453a-9f46-1079d18d02a7","isHidden":false,"type":"heading"},{"content":{"text":"<p>At the beginning of Bliss, we deliberately focused on small pieces with big influences. Aligning on these atomic design decisions that will influence bigger decisions in the future were our goal. For us, it was clear from the beginning that we would start with the following steps because getting to any components (e.g. buttons, tabs, form elements...):<\/p>"},"id":"ecc244c4-cbde-4c28-9a72-c0b0bde1b89b","isHidden":false,"type":"text"},{"content":{"text":"1. Color\n2. Typography\n3. Spacing\n4. Icons"},"id":"5a10874e-f8dc-4413-97f8-e82c36cda84e","isHidden":false,"type":"markdown"},{"content":{"text":"<p>These different areas all can be combined to form better components and are the fundamentals of every interface. The order of importance was set, and we immediately started with redefining our color system. As I was playing with the color, it became clear to use, that we needed a system to make more systematic decisions. This would also help us make our reasoning and guidance around accessibility and color contrast easier.  <\/p>"},"id":"d08e6239-ac37-4f60-874c-1c19405c9e60","isHidden":false,"type":"text"},{"content":{"location":"kirby","image":["screenshot-2021-04-11-at-18.29.04.png"],"src":"","alt":"","caption":null,"link":"","ratio":"","crop":"false"},"id":"b6f086e9-26d3-41bf-9b5a-7868c4c3085c","isHidden":false,"type":"image"},{"content":{"text":"<p>With a color system defined from a design perspective (designers could use the colors with <a href=\"https:\/\/help.figma.com\/hc\/en-us\/articles\/360039238753-Styles-in-Figma\" rel=\"noopener noreferrer nofollow\">Figma Styles<\/a>), we needed to also make this available for our developers to quickly create real life examples for our new colors and their usage.<\/p>"},"id":"9d810dc8-7b8b-488b-8e42-3d27a92e0d05","isHidden":false,"type":"text"},{"content":{"level":"h2","text":"Everything is a token"},"id":"d7b058f4-4d06-4e3d-8c12-d924a72f2510","isHidden":false,"type":"heading"},{"content":{"text":"<p>To help with bridging the gap between design and development more easily, we introduced <a href=\"https:\/\/css-tricks.com\/what-are-design-tokens\/\" rel=\"noopener noreferrer nofollow\">Design Tokens<\/a> as a toolkit for manage atomic design decisions, like colors. For the implementation and management of our Design Tokens, we started using a tool called <a href=\"https:\/\/amzn.github.io\/style-dictionary\" rel=\"noopener noreferrer nofollow\">Style Dictionary<\/a>.<\/p><p>With this in mind, we started to extract the color values from Style Dictionary and release and initial very of what we later called Bliss CSS, a CSS library that would enable developers to get the Bliss styles into their codebase. After we release all the color tokens, we started to go through areas of the BRYTER product and replace old color styles with new color styles that are now served by Bliss as Design Tokens. \u2728<\/p><p>We repeated this approach for Typography and Spacing as well. First, design everything inside Figma, than bridge the gap between design and development with Design Tokens, and lastly offer finalized styles to developers with Bliss CSS. This specific approach worked perfectly with these small design atoms and had two main positive effects:<\/p><p>1. Designers and developers could start using Bliss directly and could align their language more and more (Color names, typography styles or spacing, everything had the same naming structure now).<\/p><p>2. Because we actively started replacing working code with new Bliss CSS design atoms, developers weren't scared to try it out themselves and saw the positive impact right away.<\/p>"},"id":"c9a3c9ac-9cc3-4755-b44f-a1afe3a20f76","isHidden":false,"type":"text"},{"content":{"level":"h2","text":"Components"},"id":"841ec5b5-e81d-4bf1-aed1-30a9caf766c6","isHidden":false,"type":"heading"},{"content":{"text":"<p>While all the foundational work is needed and Design Tokens already helped designers and developers in their daily work, components is where the big gains become noticeable. The interesting challenge for us during the development of components for Bliss was the alignment between what was already there and where Bliss needed to align approaches to surface one general solution.<\/p><p>Therefore, we started every component creation process with an interface inventory to surface the current patterns and see where we can move things. Because most of the tasks around Bliss at that time was mostly led by me, good prioritization was key to keep a good and constant release flow going. After some discussions and data based on the different interface inventories we came up with a rough roadmap.<\/p>"},"id":"2704f76c-196b-48e4-ba09-2fd5fa47bee3","isHidden":false,"type":"text"},{"content":{"text":"1. Buttons\n2. First set of form components\n3. Data Tables\n4. Tabs\n5. Badge\n..."},"id":"1e876e90-ba69-4954-af7e-369c617d8c93","isHidden":false,"type":"markdown"},{"content":{"text":"<p>During the time working on Bliss, this was probably the most \"heads down and produce\" phase so far. With the roadmap in mind, I mostly switched between Figma and Bliss CSS to develop components on both ends, while also getting feedback from designers and developers. This process was a huge collaboration effort and I couldn't have done it without the help and guidance from all people involved.<\/p>"},"id":"43f9c940-a3bb-4096-8ef0-0f061706d4da","isHidden":false,"type":"text"},{"content":{"location":"kirby","image":["screenshot-2021-04-14-at-17.42.44.png"],"src":"","alt":"","caption":null,"link":"","ratio":"","crop":"false"},"id":"2de9098e-7872-4d93-a64a-41aa66c6c4a3","isHidden":false,"type":"image"},{"content":{"location":"kirby","image":["screenshot-2021-04-14-at-17.42.35.png"],"src":"","alt":"","caption":null,"link":"","ratio":"","crop":"false"},"id":"38e8f6b5-f27d-4c9e-92e5-8c5a9a92b5d5","isHidden":false,"type":"image"},{"content":{"level":"h2","text":"Documentation is king"},"id":"cbfc1688-0a87-4209-adcd-6ab90b75a29d","isHidden":false,"type":"heading"},{"content":{"text":"<p>While releasing new Bliss CSS components was common at the end of 2019, documentation started getting behind. While we started using Notion at the beginning to document decision-making and basic guidelines around components, Notion wasn't the right place to have detailed and guided documentation for a design system, so we needed a better solution.<\/p><p>Because of a lack a resources (mostly me and sometimes additional helping hand here and there) we need a quick solution without many initial efforts from us. We decided to go with <a href=\"https:\/\/zeroheight.com\" rel=\"noopener noreferrer nofollow\">zeroheight<\/a> to create one unified place for documentation. One place where designers, developers, product managers or anybody else could go and find what they were looking for.<\/p>"},"id":"fe5b18b6-11ac-4b88-aaaa-2af050ebe0d4","isHidden":false,"type":"text"},{"content":{"location":"kirby","image":["screenshot-2021-04-11-at-19.02.34.png"],"src":"","alt":"","caption":null,"link":"","ratio":"","crop":"false"},"id":"ab9f84b1-cda6-4cb7-bc3b-8d419ae4dfc0","isHidden":false,"type":"image"},{"content":{"location":"kirby","image":["screenshot-2021-04-11-at-19.04.42.png"],"src":"","alt":"","caption":null,"link":"","ratio":"","crop":"false"},"id":"f76f2630-32ba-4108-a21b-2c7e25af47ab","isHidden":false,"type":"image"},{"content":{"location":"kirby","image":["screenshot-2021-04-11-at-19.05.38.png"],"src":"","alt":"","caption":null,"link":"","ratio":"","crop":"false"},"id":"6684ce47-8162-4b36-b42f-f5f5f5910ec6","isHidden":false,"type":"image"},{"content":{"text":"<p>Besides the general foundational and design documentation, the key focus of the documentation page way around components. Each individual component page followed a three section model.<\/p>"},"id":"bc64a99b-cf3d-4823-86d6-ef04c9b113c0","isHidden":false,"type":"text"},{"content":{"level":"h3","text":"Section: General"},"id":"407409f7-19ac-4885-865a-80c914495109","isHidden":false,"type":"heading"},{"content":{"text":"<p>All the general and design-focused information about a component. What are its variants? How to use it? What type if content can this component accept? What are the accessibility guidelines?<\/p>"},"id":"73693385-4261-440e-aa8b-e999a6bc6db1","isHidden":false,"type":"text"},{"content":{"level":"h3","text":"Section: Code"},"id":"a9be56eb-0277-4c84-827b-72dc09075226","isHidden":false,"type":"heading"},{"content":{"text":"<p>The code section of the component documentation was mostly for developers. This page hosted some real-time code examples that could be manipulated in real-time. All the showcased examples where semantic suggestions on how to use the Bliss CSS classes to get to a specific result. They also included some accessibility best practices.<\/p>"},"id":"6cff5cb3-aab5-46d2-8831-0e5ac9df21b9","isHidden":false,"type":"text"},{"content":{"level":"h3","text":"Section: Tokens"},"id":"27609197-bfa4-4665-818c-f369960e8f8e","isHidden":false,"type":"heading"},{"content":{"text":"<p>The tokens section was a straightforward documentation of all the specific design tokens that were scoped to an individual component level.<\/p>"},"id":"1de44824-f63f-44db-b531-f30560aec286","isHidden":false,"type":"text"},{"content":{"level":"h2","text":"Pause and struggle"},"id":"2217fd18-4f1c-4f9d-9082-43bfc5810b09","isHidden":false,"type":"heading"},{"content":{"text":"<p>While the first seven months of our Bliss journey were full of many improvements and progress, sometimes priorities change inside a fast-growing company. As the design system arrived at a level where general usage was common across our different teams and other pressing features were more important, I moved to another team. As the only core member of the design system team, this meant that Bliss would go into a maintenance mode for some month and with very limited resources only bug fixes were realistically possible.<\/p><p>While this stopped us from supporting new ideas for components or layouts, the foundation we've built for designers inside Figma and for developers with Bliss CSS worked and supported them in their day-to-day work. Additionally, it was great to see that our early decisions of going technology-agnostic (we just offered CSS, not JavaScript) help us during this time of pause because it kept things flexible and adjustable. While this might sound scary for design systems, deviations from what we offered with Bliss CSS basically turned into a backlog we could focus on after this pause.<\/p>"},"id":"7a8baffd-c670-4bc8-a2c1-25825b8642d3","isHidden":false,"type":"text"},{"content":{"level":"h2","text":"A new beginning"},"id":"2cc511d1-a959-4b99-aa47-898291dc9a6d","isHidden":false,"type":"heading"},{"content":{"text":"<p>While the time Bliss went into maintenance mode took longer than initially expected, it had a good outcome after all. On the one hand, we could prove that Bliss offered value to our teams across disciplines. On the other hand, it became clear that we could need to put more focus into Bliss to make the solution it offered even more beneficial to BRYTER.<\/p><p>This is where we decided to hire a team and start the journey to rethink the current state of Bliss. This is also the end of <strong>Bliss Design System v0.x<\/strong> as we want to make Bliss more mature. <\/p><p>This process in ongoing and you can find more about it on out <a href=\"https:\/\/gitlab.com\/bliss-design-system\" rel=\"noopener noreferrer nofollow\">GitLab organization<\/a> because we made Bliss open source.<\/p>"},"id":"cfd7e664-8199-4b5d-b5ee-84144bd598da","isHidden":false,"type":"text"}]