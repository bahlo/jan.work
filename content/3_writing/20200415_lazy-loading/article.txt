Title: Lazy loading

----

Text:

When it comes to content heavy sites, especially when content is placed below the fold, lazy loading of specific assets is a good practice to follow. It helps with only loading these assets at a time when the user needs them. As a result, it improves the overall performance and user experience of a website.

For some weeks, I have been working on a new project. This project is focused on displaying images and it needs to load a lot of them in certain circumstances. This is the perfect place to implement something like lazy loading to improve the overall performance.

At first, I thought about using some popular lazy loading libraries (e.g. (link: https://github.com/verlok/vanilla-lazyload text: (link: https://github.com/tuupola/lazyload text: lazyload)) or this other lazyload one) or building something myself with the (link: https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API text: Intersection Observer API).

After (link: https://css-tricks.com/the-complete-guide-to-lazy-loading-images/ text: some research), I remembered a discussion about a new native way of handling lazy loading. I came across (link: https://addyosmani.com/blog/lazy-loading/ text: this post) from (link: https://twitter.com/addyosmani text: Addy Osmani) and started to play with the new loading attribute. You only need to add loading="lazy" to your <img> as shown in this example:

```html
<img src="image.jpg" loading="lazy" alt="describe your image here" />
```

This couldn't be easier! It works with `<picture>`, srcset and also supports `<iframe>`.

To be honest, the simplicity was enough for me to use it in this project, regardless of the browser support. I knew, browsers would catch up at some point. For me, the beauty about this new loading attribute is the fact that browser support is really decent now ‚Äî this was a positive surprise.

(link: https://twitter.com/addyosmani/status/1114777583302799360?s=20 text: Chrome is supporting it since version 75) and (link: https://www.mozilla.org/en-US/firefox/75.0/releasenotes/ text: Firefox recently shipped an update) to also support it.

One interesting side note: (link: https://caniuse.com/#feat=loading-lazy-attr text: Firefox seems to be more aggressive) in terms of ‚Äúbeing lazy‚Äù. To be honest, I like this approach, but we will see what works better in the future.

All in all, I think this is a great improvement for the web. From this point going forward, I will use this new loading attribute whenever I see fit. If browsers already support it, the web becomes a bit faster. If they don't support it yet, everything still works. All for free. No additional JavaScript needed.

This is awesome! üöÄ

----

Images: 

----

Date: 2020-04-15 17:00:00

----

Meta-title: 

----

Meta-description: 

----

Meta-canonical-url: 

----

Meta-author: 

----

Meta-image: 

----

Meta-phone-number: 

----

Og-title: 

----

Og-description: 

----

Og-image: 

----

Og-site-name: 

----

Og-url: 

----

Og-audio: 

----

Og-video: 

----

Og-determiner: 

----

Og-type: website

----

Og-type-article-published-time: 2021-04-08 00:00:00

----

Og-type-article-modified-time: 2021-04-08 00:00:00

----

Og-type-article-expiration-time: 2021-04-08 00:00:00

----

Og-type-article-author: 

----

Og-type-article-section: 

----

Og-type-article-tag: 

----

Twitter-title: 

----

Twitter-description: 

----

Twitter-image: 

----

Twitter-card-type: 

----

Twitter-site: 

----

Twitter-creator: 

----

Robots-noindex: default

----

Robots-nofollow: default

----

Robots-noarchive: default

----

Robots-noimageindex: default

----

Robots-nosnippet: default