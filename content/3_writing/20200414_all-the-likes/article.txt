Title: All the likes

----

Text:

As you might have already read in one of the older posts, this redesign process is full of silly sub-projects that sidetrack me towards my ultimate goal of finishing the redesign at some point in the future. This post tells the story of one of these sub-projects.
Things I've liked

At some point in February, different posts bubbled into my timeline with a similar topic: self-hosted “like pages”. One post that stuck with me the most was written by (link: https://www.robinrendle.com text: Robin Rendle). Robin summarized his thoughts in a blogpost on his own blog called (link: https://www.robinrendle.com/notes/rss-favorites text: RSS favorites). After reading it, I knew, I wanted something similar. I quickly collected some ideas and after a while, I had a clear goal:

> I want a way to display specific bookmarks, I saved in my Pinboard.in account, to also appear publicly on my website.

With a goal in mind, I looked into technical solutions to archive the desired outcome. Thankfully, 11ty offers help with a feature called (link: https://www.11ty.dev/docs/data-js/ text: JavaScript Data Files). With this feature, you run code at build time to fetch data — exactly the thing I needed to do.
Connecting everything with Pinboard

With the power of JavaScript Data Files and a good amount of inspiration and learning from the 11ty (link: https://github.com/WebInspectInc/eleventy-plugin-feedbin text: Feedbin Plugin), I quickly got a first version up and running. Besides some fancy caching stuff (which I took from the 11ty Feedbin Plugin), the primary task was to call the Pinboard API and get the data I wanted.

Therefore, I stored my Pinboard credentials inside a .env file and imported it later via the (link: https://www.npmjs.com/package/dotenv text: dotenv) package.

```js
const fs = require('fs');
const fetch = require('node-fetch');
require('dotenv').config();

const USERNAME = process.env.PINBOARD_USERNAME;
const PASSWORD = process.env.PINBOARD_PASSWORD;

...
```

Besides that, I imported the (link: https://www.npmjs.com/package/node-fetch text: node-fetch) package to use the fetch() functionality, which is available inside of modern browsers, in a Node.js environment. With all of this, the part of getting the content from Pinboard was only some lines of JavaScript:

```js
...

async function fetchPinboard() {
	if (!USERNAME || !PASSWORD) {
		console.warn(`>>> unable to fetch Pinboard: missing username or password`);
		return false;
	}

	let url = `https://${USERNAME}:${PASSWORD}@api.pinboard.in/v1/posts/all?format=json&tag=like`;
	const response = await fetch(url);

	if (response.status === 200) {
      const feed = await response.json();
	  return feed;
	}

	return null;
}

...
```

One side note: I'm only asking for my Pinboard entries with the tag like. This is my mechanism of only showing the bookmarks I want to have accessible here.

Now, every time (link: https://www.netlify.com text: Netlify) is building this site, 11ty automatically asks Pinboard for new data and refreshes the /likes pages with it.

----

Images: 

----

Date: 2020-04-14 17:00:00

----

Likes: b3f581b8fd774124af5c3b8e305b0931;cd9dc971a99fc8f0c969d2312147ddb5;42c51a431b7ce97bd9448d999a6bc5af;ee373d8c71899c2034de31b790a801cf;22a5506ca036c25e87c85efe011f05d8;82eb4fbcffbba3888ac8a55026d9e4f9;c9639a28506e7cb64e1c7adeeb66dac6;17b583c030d0a3aed4f015a4c1c95015;d0be788f7f8e30a6055654aaff12a5db;3f1da97d03184c55df8e4645be1cf2fa;f47ece30b1fb90ae27df99e60f034772;82b894392c86f55fed93f3623ebf5c96;49165224344347b306bcef9e89e937f6;3b05e2dd622ef32726a12702fba9e96d;0491890c80a0e8483e71c805e586eedd;dc1bb9530fdc5e58d4d55c4e6863491a;88fb45b11af02b9b8ec06c4a3ef350e4;894d94fd0d0c3f869cd3f3c4293a89cb;4215cbc1cadf8d70d29d1d60905a520e;bebead6595ded9ee365667485467d0f6;be706b110240977c1cc7e42f8637f5a0;b73c5697152cbed2f52317e384fc3aa9;38fe45b2ffb386a7ebd6d0760302e6cd;d64ecaa65d35b8d1fa571ed53b114cd7;84b918d44f29097da325aae146a3f5e8;a5091b65934a924143d62324ee283ddd;7f726eecc03da4fe56bfee4fc8e65f55;2e88672243f70d377a11e85b19b6c7be;12ba70c64bf28e0a9e2339c1693866ca;a5bbf446c61ca39d7f66da7494b82ccf;

----

Meta-title: 

----

Meta-description: 

----

Meta-canonical-url: 

----

Meta-author: 

----

Meta-image: 

----

Meta-phone-number: 

----

Og-title: 

----

Og-description: 

----

Og-image: 

----

Og-site-name: 

----

Og-url: 

----

Og-audio: 

----

Og-video: 

----

Og-determiner: 

----

Og-type: website

----

Og-type-article-published-time: 2021-04-08 00:00:00

----

Og-type-article-modified-time: 2021-04-08 00:00:00

----

Og-type-article-expiration-time: 2021-04-08 00:00:00

----

Og-type-article-author: 

----

Og-type-article-section: 

----

Og-type-article-tag: 

----

Twitter-title: 

----

Twitter-description: 

----

Twitter-image: 

----

Twitter-card-type: 

----

Twitter-site: 

----

Twitter-creator: 

----

Robots-noindex: default

----

Robots-nofollow: default

----

Robots-noarchive: default

----

Robots-noimageindex: default

----

Robots-nosnippet: default